//
// Created by 张德满 on 17/1/18.
//
/**
 Problem Description
A simple mathematical formula for e is



where n is allowed to go to infinity. This can actually yield very accurate approximations of e using relatively small values of n.


Output
Output the approximations of e generated by the above formula for the values of n from 0 to 9. The beginning of your output should appear similar to that shown below.


Sample Output
n e
- -----------
0 1
1 2
2 2.5
3 2.666666667
4 2.708333333
 */
#include <stdio.h>
int getResult(int n){
    if ( n > 0 ){
        return n * getResult( n - 1 );
    } else{
        return 1;
    }
}
int main(){
    printf("%c %c\n" , 'n' , 'e');
    printf("- -----------\n");
    int i = 0 , j =0;
    for ( i = 0; i<= 9; i++ ){
        int sum = 0;
        int result = getResult(i);
        for ( j = 0; j <= i; j++ ){
            sum = sum + result/getResult(j);
        }
        if ( i <= 1 ){
            printf("%d %0.0f\n",i , sum*1.0/result);
        } else if( i == 2) {
            printf("%d %0.1f\n",i , sum*1.0/result);
        } else{
            printf("%d %0.9f\n",i , sum*1.0/result);
        }
    }
    return 0;
}

